package main

import "fmt"

func main() {
	var n int
	fmt.Scanln(&n)

	m := make([]int, n, n)
	for i := range m {
		fmt.Scan(&m[i])
	}
	res := school(n, m)
	for _, a := range res {
		fmt.Print(a, " ")
	}
	//fmt.Println(school(n,m))

}

/*
На вход подается не отсортированный массив целых чисел и некоторое целое число «element».
Необходимо написать функцию, которая вернет количество элементов, которые не равны данному числу «element».
Возвращаемое значение после работы функции обозначает количество чисел не равные «element».
*/
func elem(n int, m []int, element int) int {
	count := 0
	for i := 0; i < n; i++ {
		if m[i] != element {
			count++
		}
	}
	return count
}

/*
В школе прошел экзамен по математике. Несколько человек списали решения и были замечены. Этим школьникам поставил 0 баллов. Задача: есть массив с оценками, среди которых есть 0.
Необходимо все оценки, равные нулю перенести в конец массива, чтобы все такие школьники оказались в конце списка.

Примечание: первая строка во вводе - число элементов в массиве
*/
// перемещать в одном массиве
// копить нули слева от указателя и пушить их вправо
// менять позиции элемента [индекс минус количество элементов на данном шаге цикла]
func school(n int, m []int) []int {
	count := 0
	for i := 0; i < len(m); i++ {
		if m[i] == 0 {
			count++
		} else if count > 0 {
			m[i-count] = m[i]
			m[i] = 0
		}
	}
	return m

}

//Тесты:
//9
//0 33 57 88 60 0 0 80 99
//8
//0 0 88 0 99 0 100 0
